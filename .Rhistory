source("fit.R")
####### DATA #######
set.seed(1)
data(iris)
df <- iris
# Train
train <- sample_n(df, 100, replace=FALSE)
# Test
test <- sample_n(df, 50, replace=FALSE)
Y <- test[5]
test <- test[-5]
####### NBAYES #######
print(system.time({modele <- fit(Species ~ . , train,  parallel=FALSE, discretize=TRUE)}))
print(system.time({Mon_Bail <- predict(modele, test, "class", parallel=FALSE)}))
source('~/Cours/SISE_M2/programmation_R/projet/v2/predict.R')
print(system.time({Mon_Bail <- predict(modele, test, "class", parallel=FALSE)}))
c(1,2)
as.data.frame(c(1,2))
colnames(c(1,2)) = c("e", "Ã©")
# Sources
source("fit.R")
####### DATA #######
set.seed(1)
data(iris)
df <- iris
# Train
train <- sample_n(df, 100, replace=FALSE)
# Test
test <- sample_n(df, 50, replace=FALSE)
Y <- test[5]
test <- test[-5]
detach("package:NBC", unload = TRUE)
rows <- c(1, 2, 3)
colnames <- c("ee", "err", "zfez")
df <- as.data.frame(rows)
df
rbind(colnames, rows)
rbind(rows)
rbind(c(1,2))
help("rbind")
# Sources
source("fit.R")
source("predict.R")
####### DATA #######
set.seed(1)
data(iris)
df <- iris
# Train
train <- sample_n(df, 100, replace=FALSE)
# Test
test <- sample_n(df, 50, replace=FALSE)
Y <- test[5]
test <- test[-5]
####### NBAYES #######
print(system.time({modele <- fit(Species ~ . , train,  parallel=FALSE, discretize=TRUE)}))
print(system.time({Mon_Bail <- predict(modele, test, "class", parallel=FALSE)}))
modele$cuts[1]
print(system.time({Mon_Bail <- predict(modele, test, "class", parallel=FALSE)}))
source('~/Cours/SISE_M2/programmation_R/projet/v2/predict.R')
print(system.time({Mon_Bail <- predict(modele, test, "class", parallel=FALSE)}))
setwd("~/Cours/SISE_M2/programmation_R/Test_package/NBC")
source('~/.active-rstudio-document')
laplace <- integer(12)
if ((class(laplace)!="integer") | laplace<0) {
print("STOOOOP")
}
if ((class(laplace)!="integer") || laplace<0) {
print("STOOOOP")
}
laplace = "eee"
laplace <- integer(laplace)
laplace = "2"
laplace <- integer(laplace)
if ((class(laplace)!="integer") || laplace<0) {
print("STOOOOP")
}
laplace = "-2"
laplace <- integer(laplace)
if ((class(laplace)!="integer") || laplace<0) {
print("STOOOOP")
}
laplace = -12
laplace <- integer(laplace)
if ((class(laplace)!="integer") || laplace<0) {
print("STOOOOP")
}
as.integer(-12)
laplace = -12
laplace <- integer(laplace)
if ((class(laplace)!="integer") || laplace<0) {
print("STOOOOP")
}
laplace = "3"
laplace <- integer(laplace)
if ((class(laplace)!="integer") || laplace<0) {
print("STOOOOP")
}
as.integer("eee")
laplace = 0
laplace <- integer(laplace)
if ((class(laplace)!="integer") || laplace < 0) {
print("STOOOOP")
}
as.integer(0)
laplace = 0
laplace <- as.integer(laplace)
if ((class(laplace)!="integer") || laplace < 0) {
print("STOOOOP")
}
laplace = -1
laplace <- as.integer(laplace)
if ((class(laplace)!="integer") || laplace < 0) {
print("STOOOOP")
}
laplace = TRUE
laplace <- as.integer(laplace)
if ((class(laplace)!="integer") || laplace < 0) {
print("STOOOOP")
}
laplace
laplace = TRUE
laplace <- as.integer(laplace)
laplace
data(iris)
df[1,] <- c(NA, NA, NA, 4, NA)
df[1,1] <- NA
df[1,1] <- "NA"
df[1,1]
df <- iris
df
df[1,1]
df[1,1] <- NA
df[1,]
df[3,3] <- NA
df
na.omit(df)
df
df <- na.omit(df)
df
21/25
3/5
2/5
26/7
library(NBC)
?mdlp_para
library(NBC)
?mdlp_para
?fit
?Discretization
?discret
?fit
library(NBC)
library(NBC)
?fit
setwd("~/Cours/SISE_M2/programmation_R/Test_package/NBC")
devtools::use_data_raw()
library(devtools)
devtools::use_data_raw()
use_data_raw()
fish <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/fish.csv")
usethis::use_data("fish")
usethis::use_data(fish)
fish
fish <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/fish.csv")
usethis::use_data(fish)
library(NBC)
library(NBC)
?fit
?fish
library(NBC)
setwd("~/Cours/SISE_M2/programmation_R/Test_package/NBC")
source('~/Cours/SISE_M2/programmation_R/Test_package/NBC/R/fit.R')
laplace=2
warning("ffefzav", laplace, "fdzfqfe")
laplace=2
warning("Laplace smoothing at ", laplace, " is used !!!")
use_data_raw()
diagnosis <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/diagnosis.data")
diagnosis <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/diagnosis.data", header=FALSE, sep=",")
diagnosis <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/diagnosis.data", header=TRUE, sep=",")
diagnosis <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/diagnosis.data", header=TRUE, sep=" ")
diagnosis <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/diagnosis.data", header=FALSE, sep=" ")
diagnosis <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/diagnosis.data", header=FALSE, sep=" ",
stringsAsFactors=FALSE, fileEncoding="latin1")
diagnosis
diagnosis <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/diagnosis.data", header=FALSE, sep=" ",
stringsAsFactors=FALSE)#, fileEncoding="latin1")
diagnosis
rm(diagnosis)
diagnosis <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/diagnosis.data", header=FALSE, sep=" ", fileEncoding="latin1")
diagnosis
diagnosis <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/diagnosis.data", header=FALSE, sep=",", fileEncoding="latin1")
diagnosis
diagnosis <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/diagnosis.data", header=TRUE, sep=",", fileEncoding="latin1")
diagnosis
diagnosis <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/diagnosis.data", header=TRUE, sep=" ", fileEncoding="latin1")
diagnosis <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/diagnosis.data", header=FALSE, sep=" ", fileEncoding="latin1")
diagnosis
diagnosis <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/diagnosis.data", header=FALSE, sep="\t")
diagnosis
diagnosis <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/diagnosis.data", header=FALSE, sep=" ", skip=1)
diagnosis
diagnosis <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/diagnosis.data", header=FALSE, sep=" ", skip=5)
diagnosis
diagnosis <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/diagnosis.data", header=FALSE, sep="\t", skip=5)
diagnosis
diagnosis <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/diagnosis.data", header=FALSE, sep="    ", skip=5)
diagnosis
diagnosis <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/diagnosis.data", header=FALSE, sep="\t", skip=5)
diagnosis <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/diagnosis.data", header=FALSE, sep="\t")
diagnosis <- read.csv("/Users/d/Cours/SISE_M2/Data_Sets/diagnosis.data", header=FALSE, sep="\t", encoding="latin1")
diagnosis
library(readxl)
diagnosis <- read_excel("~/Cours/SISE_M2/Data_Sets/diagnosis.xlsx",
col_names = FALSE)
View(diagnosis)
diagnosis
colnames(diagnosis) <- c("Temeperature", "Nausea", "Lumbar", "Urine", "Micturition", "Burning", "Inflammation", "Nephritis")
diagnosis
class(diagnosis)
diagnosis[1,]
diagnosis[1,1]
save(diagnosis, file="~/Cours/SISE_M2/Data_Sets/diagnosis2.csv")
diagnosis <- read.csv("~/Cours/SISE_M2/Data_Sets/diagnosis.xlsx", header=FALSE, sep=",")
diagnosis
diagnosis <- read.csv("~/Cours/SISE_M2/Data_Sets/diagnosis.xlsx", header=FALSE, sep=",", encoding = latin1)
diagnosis <- read.csv("~/Cours/SISE_M2/Data_Sets/diagnosis.xlsx", header=FALSE, sep=",", encoding = "UTF-8")
diagnosis
library(readxl)
diagnosis <- read_excel("~/Cours/SISE_M2/Data_Sets/diagnosis.xlsx", col_names = FALSE)
diagnosis
colnames(diagnosis) <- c("Temeperature", "Nausea", "Lumbar", "Urine", "Micturition", "Burning", "Inflammation", "Nephritis")
diagnosis
class(diagnosis)
library(readxl)
colnam <- c("Temeperature", "Nausea", "Lumbar", "Urine", "Micturition", "Burning",
"Inflammation", "Nephritis")
diagnosis <- read_excel("~/Cours/SISE_M2/Data_Sets/diagnosis.xlsx", col_names=colnam)
diagnosis <- as.data.frame(diagnosis)
diagnosis
usethis::use_data(diagnosis)
library(readxl)
colnam <- c("Temeperature", "Nausea", "Lumbar", "Urine", "Micturition", "Burning",
"Inflammation", "Nephritis")
diagnosis <- read_excel("~/Cours/SISE_M2/Data_Sets/diagnosis.xlsx", col_names=colnam)
diagnosis <- as.data.frame(diagnosis)
usethis::use_data(diagnosis)
usethis::use_data(diagnosis, overwrite=TRUE)
library(NBC)
library(readxl)
colnam <- c("Temperature", "Nausea", "Lumbar", "Urine", "Micturition", "Burning",
"Inflammation", "Nephritis")
diagnosis <- read_excel("~/Cours/SISE_M2/Data_Sets/diagnosis.xlsx", col_names=colnam)
diagnosis <- as.data.frame(diagnosis)
usethis::use_data(diagnosis, overwrite=TRUE)
library(NBC)
print(df_disc)
setwd("~/Cours/SISE_M2/programmation_R/Test_package/NBC")
source('~/Cours/SISE_M2/programmation_R/Test_package/NBC/R/fit.R')
data(diagnosis)
fit(Temperature ~ ., diagnosis)
library(NBC)
fit(Temperature ~ ., diagnosis)
data(diagnosis)
fit(Temperature ~ ., diagnosis)
data(diagnosis)
fit(Temperature ~ ., diagnosis)
setwd("~/Cours/SISE_M2/programmation_R/Test_package/NBC")
data(diagnosis)
fit(Temperature ~ ., diagnosis)
library(NBC)
fit(Inflammation ~ ., diagnosis)
data("iris")
df <- iris
data("iris")
df <- iris
Y <- iris[5]
which(names(df_disc) != names(Y)))
which(names(df_disc) != names(Y))
which(names(df) != names(Y))
df <- data(diagnosis)
diagnosis
Y <- df[7]
which(names(df) != names(Y))
data("iris")
data(diagnosis)
df <- data(diagnosis)
Y <- df[7]
which(names(df) != names(Y))
Y
df
df <- diagnosis
Y <- df[7]
which(names(df) != names(Y))
df <- df[-7]
df
quanti <- df[1]
quali <- df[-1]
quanti
quali
library(discretization)
quanti_disc <- mdlp(cbind(quanti, Y))
quanti_disc
disc <- mdlp(cbind(quanti, Y))
disc
disc <- cbind(disc, quali)
disc
source('~/.active-rstudio-document')
disc
library(discretization)
data(diagnosis)
df <- diagnosis
Y <- df[7]
df <- df[-7]
quanti <- df[1]
quali <- df[-1]
disc <- mdlp(cbind(quanti, Y))
disc
disc <- cbind(disc$Disc.data, quali)
disc
table(disc[1], Y)
table(disc[,1], Y[,1])
prop.table(disc[,1], Y[,1])
prop.table(tabme(disc[,1], Y[,1]), 2)
prop.table(table(disc[,1], Y[,1]), 2)
prop.table(table(disc[,1], Y[,1]), 1)
fit(disease ~ ., heart)
heart <- read_excel("/Users/d/Cours/SISE_M2/programmation_R/projet/Data/heart_2.xls", sheet='dataset')
fit(disease ~ ., heart)
modele <- fit(disease ~ ., heart)
modele <- fit(disease ~ ., heart)
modele$table_proba_cond
modele$prior
exang <- c("yes")
chest_pain <- c("asympt")
cbind(exang, chest_pain)
as.data.frame(cbind(exang, chest_pain))
test <- as.data.frame(cbind(exang, chest_pain))
res <- predict(test)
library(NBC)
modele <- fit(disease ~ ., heart)
res <- predict(test)
?predict.NBAYES
res <- predict(modele, test)
test
heart[1,]
res <- predict(modele, heart[1,])
res <- predict(modele, heart)
library(NBC)
heart <- read_excel("/Users/d/Cours/SISE_M2/programmation_R/projet/Data/heart_2.xls", sheet='dataset')
modele <- fit(disease ~ ., heart)
res <- predict(modele, heart)
res <- predict(modele, data_test=heart)
res <- predict.NBAYES(modele, data_test=heart)
res <- predict(modele, data_test=heart)
library(NBC)
library(NBC)
heart <- read_excel("/Users/d/Cours/SISE_M2/programmation_R/projet/Data/heart_2.xls", sheet='dataset')
modele <- fit(disease ~ ., heart)
res <- predict(modele, heart)
library(NBC)
library(NBC)
heart <- read_excel("/Users/d/Cours/SISE_M2/programmation_R/projet/Data/heart_2.xls", sheet='dataset')
modele <- fit(disease ~ ., heart)
res <- predict(modele, heart)
detach("package:NBC", unload = TRUE)
library(NBC)
source('~/.active-rstudio-document')
library(NBC)
library(NBC)
library(NBC)
heart <- read_excel("/Users/d/Cours/SISE_M2/programmation_R/projet/Data/heart_2.xls", sheet='dataset')
modele <- fit(disease ~ ., heart)
res <- predict(modele, heart)
res
1.7137+4?2095
1.7137+4.2095
(-1.7137/5.9232) + 1
source('~/.active-rstudio-document')
prop.table(table(disc[,1], Y[,1]), 1)
table(disc[,1], Y[,1])
prop.table(table(disc[,1], Y[,1]), 2)
prop.table(table(disc[,1], Y[,1]), 1)
prop.table(table(disc[,1], Y[,1]))
tbl <- table(disc[,1], Y[,1])
ncol(tabl)
tabl <- table(disc[,1], Y[,1])
ncol(tabl)
nrow(tabl)
library(NBC)
library(NBC)
heart <- read_excel("/Users/d/Cours/SISE_M2/programmation_R/projet/Data/heart_2.xls", sheet='dataset')
modele <- fit(disease ~ ., heart)
library(NBC)
library(NBC)
heart <- read_excel("/Users/d/Cours/SISE_M2/programmation_R/projet/Data/heart_2.xls", sheet='dataset')
modele <- fit(disease ~ ., heart)
library(NBC)
library(NBC)
heart <- read_excel("/Users/d/Cours/SISE_M2/programmation_R/projet/Data/heart_2.xls", sheet='dataset')
modele <- fit(disease ~ ., heart)
res <- predict(modele, heart)
res
modele
data("iris")
fit(Species ~ ., iris)
data("diagnosis")
fit(Inflammation ~ ., iris)
fit(Inflammation ~ ., diagnosis)
modele <- fit(Inflammation ~ ., diagnosis)
print(modele)
source('~/Cours/SISE_M2/programmation_R/Test_package/NBC/R/print.r')
modele
modele
modele
modele$cuts
caca <- c("erer")
exists(caca)
exists(caca) == TRUE
exists("caca")
rm(caca)
ddd <- "caca"
exists("caca")
library(NBC)
library(NBC)
heart <- read_excel("/Users/d/Cours/SISE_M2/programmation_R/projet/Data/heart_2.xls", sheet='dataset')
modele <- fit(disease ~ ., heart)
res <- predict(modele, heart)
res
modele
data("diagnosis")
modele <- fit(Inflammation ~ ., diagnosis)
print(modele)
modele$cuts
modele <- fit(disease ~ ., heart)
modele
data("diagnosis")
modele <- fit(Inflammation ~ ., diagnosis)
print(modele)
modele$cuts
exists("modele")
predict(modele, diagnosis)
res <- predict(modele, diagnosis)
table(res$prediction[3], diagnosis$Inflammation)
table(res$prediction$class, diagnosis$Inflammation)
diagnosis
diagnosis[1, 3] <- NA
diagnosis
fit(Lumbra ~ ., diagnosis)
fit(Lumbar ~ ., diagnosis)
library(NBC)
library(NBC)
data("iris")
modele <- fit(Species ~ ., iris)
modele$cuts
print(modele)
library(NBC)
library(NBC)
library(NBC)
data("diagnosis")
modele <- fit(Inflammation ~ ., diagnosis)
modele
res <- predict(modele, diagnosis)
res
modele$cuts
data(diagnosis)
names(diagnosis)
df <- diagnosis[-1]
df
names(df)
names(df) == names(diagnosis)
names(df) == (names(diagnosis[-1]))
sum(names(df) == (names(diagnosis[-1])))
library(e1071)
naiveBayes(Species ~ ., iris)
modele <- naiveBayes(Species ~ ., iris)
test <- iris[-5]
colnames(test)[1] <- "cacaca"
test
res <- predict(modele, test)
detach("package:e1071", unload = TRUE)
library(NBC)
data(diagnosis)
modele <- fit(Inflammation ~ ., diagnosis)
diagnosis[1,]
test <- diagnosis[-7]
?predict.NBAYES
methods(predict)
colnames(test)[1] <- "pipipipi"
test[1,]
res <- predict(modele, test)
test <- diagnosis[-7]
res <- predict(modele, test)
res
library(NBC)
heart <- read_excel("/Users/d/Cours/SISE_M2/programmation_R/projet/Data/heart_2.xls", sheet='dataset')
modele <- fit(disease ~ ., heart)
test <-
res <- predict(modele, heart)
res$prediction
heart[1,]
res2 <- predic(modele, heart[-3])
res2 <- predict(modele, heart[-3])
res$prediction[1]
res$prediction[1] - res2$prediction[1]
modele <- fit(disease ~ ., heart)
test <- heart[-3]
colnames(test)[1] <- "rhrhrhrh"
res <- predict(modele, test)
library(NBC)
library(NBC)
?predict.NBAYES
